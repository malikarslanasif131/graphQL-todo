{"ast":null,"code":"var _jsxFileName = \"D:\\\\New folder\\\\graphql-todos\\\\graphql-client\\\\src\\\\App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// src/App.js\nimport React from \"react\";\nimport { useQuery, useMutation, gql } from \"@apollo/client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GET_TODOS = gql`\n  query {\n    todos {\n      id\n      text\n    }\n  }\n`;\nconst ADD_TODO = gql`\n  mutation ($text: String!) {\n    addTodo(text: $text) {\n      id\n      text\n    }\n  }\n`;\nconst TodoList = () => {\n  _s();\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GET_TODOS);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Error: \", error.message]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: data.todos.map(todo => /*#__PURE__*/_jsxDEV(\"li\", {\n      children: todo.text\n    }, todo.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(TodoList, \"OQZiY3KqWoytFPIJWw/H9Hrmbok=\", false, function () {\n  return [useQuery];\n});\n_c = TodoList;\nconst AddTodo = () => {\n  _s2();\n  let input;\n  const [addTodo] = useMutation(ADD_TODO, {\n    update(cache, {\n      data: {\n        addTodo\n      }\n    }) {\n      const {\n        todos\n      } = cache.readQuery({\n        query: GET_TODOS\n      });\n      cache.writeQuery({\n        query: GET_TODOS,\n        data: {\n          todos: todos.concat([addTodo])\n        }\n      });\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: e => {\n        e.preventDefault();\n        addTodo({\n          variables: {\n            text: input.value\n          }\n        });\n        input.value = \"\";\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        ref: node => input = node\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add Todo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s2(AddTodo, \"YkAyGXetDJOO19DxU8fZe8pVmwM=\", false, function () {\n  return [useMutation];\n});\n_c2 = AddTodo;\nconst App = () => /*#__PURE__*/_jsxDEV(\"div\", {\n  children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n    children: \"MERN Todo App with GraphQL\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(AddTodo, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(TodoList, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 68,\n  columnNumber: 3\n}, this);\n_c3 = App;\nexport default App;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"TodoList\");\n$RefreshReg$(_c2, \"AddTodo\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"names":["React","useQuery","useMutation","gql","jsxDEV","_jsxDEV","GET_TODOS","ADD_TODO","TodoList","_s","loading","error","data","children","fileName","_jsxFileName","lineNumber","columnNumber","message","todos","map","todo","text","id","_c","AddTodo","_s2","input","addTodo","update","cache","readQuery","query","writeQuery","concat","onSubmit","e","preventDefault","variables","value","ref","node","type","_c2","App","_c3","$RefreshReg$"],"sources":["D:/New folder/graphql-todos/graphql-client/src/App.js"],"sourcesContent":["// src/App.js\nimport React from \"react\";\nimport { useQuery, useMutation, gql } from \"@apollo/client\";\n\nconst GET_TODOS = gql`\n  query {\n    todos {\n      id\n      text\n    }\n  }\n`;\n\nconst ADD_TODO = gql`\n  mutation ($text: String!) {\n    addTodo(text: $text) {\n      id\n      text\n    }\n  }\n`;\n\nconst TodoList = () => {\n  const { loading, error, data } = useQuery(GET_TODOS);\n\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>Error: {error.message}</p>;\n\n  return (\n    <ul>\n      {data.todos.map((todo) => (\n        <li key={todo.id}>{todo.text}</li>\n      ))}\n    </ul>\n  );\n};\n\nconst AddTodo = () => {\n  let input;\n\n  const [addTodo] = useMutation(ADD_TODO, {\n    update(cache, { data: { addTodo } }) {\n      const { todos } = cache.readQuery({ query: GET_TODOS });\n      cache.writeQuery({\n        query: GET_TODOS,\n        data: { todos: todos.concat([addTodo]) },\n      });\n    },\n  });\n\n  return (\n    <div>\n      <form\n        onSubmit={(e) => {\n          e.preventDefault();\n          addTodo({ variables: { text: input.value } });\n          input.value = \"\";\n        }}\n      >\n        <input ref={(node) => (input = node)} />\n        <button type=\"submit\">Add Todo</button>\n      </form>\n    </div>\n  );\n};\n\nconst App = () => (\n  <div>\n    <h2>MERN Todo App with GraphQL</h2>\n    <AddTodo />\n    <TodoList />\n  </div>\n);\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"D:\\\\New folder\\\\graphql-todos\\\\graphql-client\\\\src\\\\App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// src/App.js\nimport React from \"react\";\nimport { useQuery, useMutation, gql } from \"@apollo/client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GET_TODOS = gql`\n  query {\n    todos {\n      id\n      text\n    }\n  }\n`;\nconst ADD_TODO = gql`\n  mutation ($text: String!) {\n    addTodo(text: $text) {\n      id\n      text\n    }\n  }\n`;\nconst TodoList = () => {\n  _s();\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GET_TODOS);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Error: \", error.message]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: data.todos.map(todo => /*#__PURE__*/_jsxDEV(\"li\", {\n      style: todoStyle,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: todo.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: destroyButtonStyle,\n        children: \"\\xD7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this)]\n    }, todo.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(TodoList, \"OQZiY3KqWoytFPIJWw/H9Hrmbok=\", false, function () {\n  return [useQuery];\n});\n_c = TodoList;\nconst AddTodo = () => {\n  _s2();\n  let input;\n  const [addTodo] = useMutation(ADD_TODO, {\n    update(cache, {\n      data: {\n        addTodo\n      }\n    }) {\n      const {\n        todos\n      } = cache.readQuery({\n        query: GET_TODOS\n      });\n      cache.writeQuery({\n        query: GET_TODOS,\n        data: {\n          todos: todos.concat([addTodo])\n        }\n      });\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: addTodoContainerStyle,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: e => {\n        e.preventDefault();\n        addTodo({\n          variables: {\n            text: input.value\n          }\n        });\n        input.value = \"\";\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        style: addTodoInputStyle,\n        ref: node => input = node\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: addTodoButtonStyle,\n        type: \"submit\",\n        children: \"Add Todo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_s2(AddTodo, \"YkAyGXetDJOO19DxU8fZe8pVmwM=\", false, function () {\n  return [useMutation];\n});\n_c2 = AddTodo;\nconst App = () => /*#__PURE__*/_jsxDEV(\"div\", {\n  style: appContainerStyle,\n  children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n    style: appHeaderStyle,\n    children: \"MERN Todo App with GraphQL\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(AddTodo, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(TodoList, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 73,\n  columnNumber: 3\n}, this);\n\n// Styles\n_c3 = App;\nconst appContainerStyle = {\n  textAlign: \"center\",\n  fontFamily: \"Arial, sans-serif\"\n};\nconst appHeaderStyle = {\n  color: \"#333\"\n};\nconst addTodoContainerStyle = {\n  margin: \"20px 0\"\n};\nconst addTodoInputStyle = {\n  padding: \"8px\",\n  marginRight: \"8px\"\n};\nconst addTodoButtonStyle = {\n  padding: \"8px\",\n  backgroundColor: \"#5cb85c\",\n  color: \"white\",\n  border: \"none\",\n  cursor: \"pointer\"\n};\nconst todoStyle = {\n  display: \"flex\",\n  justifyContent: \"space-between\",\n  alignItems: \"center\",\n  padding: \"8px\",\n  borderBottom: \"1px solid #ddd\"\n};\nconst destroyButtonStyle = {\n  backgroundColor: \"transparent\",\n  color: \"#d9534f\",\n  border: \"none\",\n  cursor: \"pointer\"\n};\nexport default App;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"TodoList\");\n$RefreshReg$(_c2, \"AddTodo\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"names":["React","useQuery","useMutation","gql","jsxDEV","_jsxDEV","GET_TODOS","ADD_TODO","TodoList","_s","loading","error","data","children","fileName","_jsxFileName","lineNumber","columnNumber","message","todos","map","todo","style","todoStyle","text","destroyButtonStyle","id","_c","AddTodo","_s2","input","addTodo","update","cache","readQuery","query","writeQuery","concat","addTodoContainerStyle","onSubmit","e","preventDefault","variables","value","addTodoInputStyle","ref","node","addTodoButtonStyle","type","_c2","App","appContainerStyle","appHeaderStyle","_c3","textAlign","fontFamily","color","margin","padding","marginRight","backgroundColor","border","cursor","display","justifyContent","alignItems","borderBottom","$RefreshReg$"],"sources":["D:/New folder/graphql-todos/graphql-client/src/App.js"],"sourcesContent":["// src/App.js\nimport React from \"react\";\nimport { useQuery, useMutation, gql } from \"@apollo/client\";\n\nconst GET_TODOS = gql`\n  query {\n    todos {\n      id\n      text\n    }\n  }\n`;\n\nconst ADD_TODO = gql`\n  mutation ($text: String!) {\n    addTodo(text: $text) {\n      id\n      text\n    }\n  }\n`;\n\nconst TodoList = () => {\n  const { loading, error, data } = useQuery(GET_TODOS);\n\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>Error: {error.message}</p>;\n\n  return (\n    <ul>\n      {data.todos.map((todo) => (\n        <li key={todo.id} style={todoStyle}>\n          <span>{todo.text}</span>\n          <button style={destroyButtonStyle}>&times;</button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nconst AddTodo = () => {\n  let input;\n\n  const [addTodo] = useMutation(ADD_TODO, {\n    update(cache, { data: { addTodo } }) {\n      const { todos } = cache.readQuery({ query: GET_TODOS });\n      cache.writeQuery({\n        query: GET_TODOS,\n        data: { todos: todos.concat([addTodo]) },\n      });\n    },\n  });\n\n  return (\n    <div style={addTodoContainerStyle}>\n      <form\n        onSubmit={(e) => {\n          e.preventDefault();\n          addTodo({ variables: { text: input.value } });\n          input.value = \"\";\n        }}\n      >\n        <input style={addTodoInputStyle} ref={(node) => (input = node)} />\n        <button style={addTodoButtonStyle} type=\"submit\">\n          Add Todo\n        </button>\n      </form>\n    </div>\n  );\n};\n\nconst App = () => (\n  <div style={appContainerStyle}>\n    <h2 style={appHeaderStyle}>MERN Todo App with GraphQL</h2>\n    <AddTodo />\n    <TodoList />\n  </div>\n);\n\n// Styles\nconst appContainerStyle = {\n  textAlign: \"center\",\n  fontFamily: \"Arial, sans-serif\",\n};\n\nconst appHeaderStyle = {\n  color: \"#333\",\n};\n\nconst addTodoContainerStyle = {\n  margin: \"20px 0\",\n};\n\nconst addTodoInputStyle = {\n  padding: \"8px\",\n  marginRight: \"8px\",\n};\n\nconst addTodoButtonStyle = {\n  padding: \"8px\",\n  backgroundColor: \"#5cb85c\",\n  color: \"white\",\n  border: \"none\",\n  cursor: \"pointer\",\n};\n\nconst todoStyle = {\n  display: \"flex\",\n  justifyContent: \"space-between\",\n  alignItems: \"center\",\n  padding: \"8px\",\n  borderBottom: \"1px solid #ddd\",\n};\n\nconst destroyButtonStyle = {\n  backgroundColor: \"transparent\",\n  color: \"#d9534f\",\n  border: \"none\",\n  cursor: \"pointer\",\n};\nexport default App;\n"],"mappings":";;;AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,EAAEC,WAAW,EAAEC,GAAG,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5D,MAAMC,SAAS,GAAGH,GAAI;AACtB;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAED,MAAMI,QAAQ,GAAGJ,GAAI;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAED,MAAMK,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM;IAAEC,OAAO;IAAEC,KAAK;IAAEC;EAAK,CAAC,GAAGX,QAAQ,CAACK,SAAS,CAAC;EAEpD,IAAII,OAAO,EAAE,oBAAOL,OAAA;IAAAQ,QAAA,EAAG;EAAU;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC;EACrC,IAAIN,KAAK,EAAE,oBAAON,OAAA;IAAAQ,QAAA,GAAG,SAAO,EAACF,KAAK,CAACO,OAAO;EAAA;IAAAJ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAI,CAAC;EAE/C,oBACEZ,OAAA;IAAAQ,QAAA,EACGD,IAAI,CAACO,KAAK,CAACC,GAAG,CAAEC,IAAI,iBACnBhB,OAAA;MAAkBiB,KAAK,EAAEC,SAAU;MAAAV,QAAA,gBACjCR,OAAA;QAAAQ,QAAA,EAAOQ,IAAI,CAACG;MAAI;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACxBZ,OAAA;QAAQiB,KAAK,EAAEG,kBAAmB;QAAAZ,QAAA,EAAC;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA,GAF5CI,IAAI,CAACK,EAAE;MAAAZ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAGZ,CACL;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAET,CAAC;AAACR,EAAA,CAhBID,QAAQ;EAAA,QACqBP,QAAQ;AAAA;AAAA0B,EAAA,GADrCnB,QAAQ;AAkBd,MAAMoB,OAAO,GAAGA,CAAA,KAAM;EAAAC,GAAA;EACpB,IAAIC,KAAK;EAET,MAAM,CAACC,OAAO,CAAC,GAAG7B,WAAW,CAACK,QAAQ,EAAE;IACtCyB,MAAMA,CAACC,KAAK,EAAE;MAAErB,IAAI,EAAE;QAAEmB;MAAQ;IAAE,CAAC,EAAE;MACnC,MAAM;QAAEZ;MAAM,CAAC,GAAGc,KAAK,CAACC,SAAS,CAAC;QAAEC,KAAK,EAAE7B;MAAU,CAAC,CAAC;MACvD2B,KAAK,CAACG,UAAU,CAAC;QACfD,KAAK,EAAE7B,SAAS;QAChBM,IAAI,EAAE;UAAEO,KAAK,EAAEA,KAAK,CAACkB,MAAM,CAAC,CAACN,OAAO,CAAC;QAAE;MACzC,CAAC,CAAC;IACJ;EACF,CAAC,CAAC;EAEF,oBACE1B,OAAA;IAAKiB,KAAK,EAAEgB,qBAAsB;IAAAzB,QAAA,eAChCR,OAAA;MACEkC,QAAQ,EAAGC,CAAC,IAAK;QACfA,CAAC,CAACC,cAAc,CAAC,CAAC;QAClBV,OAAO,CAAC;UAAEW,SAAS,EAAE;YAAElB,IAAI,EAAEM,KAAK,CAACa;UAAM;QAAE,CAAC,CAAC;QAC7Cb,KAAK,CAACa,KAAK,GAAG,EAAE;MAClB,CAAE;MAAA9B,QAAA,gBAEFR,OAAA;QAAOiB,KAAK,EAAEsB,iBAAkB;QAACC,GAAG,EAAGC,IAAI,IAAMhB,KAAK,GAAGgB;MAAM;QAAAhC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAClEZ,OAAA;QAAQiB,KAAK,EAAEyB,kBAAmB;QAACC,IAAI,EAAC,QAAQ;QAAAnC,QAAA,EAAC;MAEjD;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;AAACY,GAAA,CA7BID,OAAO;EAAA,QAGO1B,WAAW;AAAA;AAAA+C,GAAA,GAHzBrB,OAAO;AA+Bb,MAAMsB,GAAG,GAAGA,CAAA,kBACV7C,OAAA;EAAKiB,KAAK,EAAE6B,iBAAkB;EAAAtC,QAAA,gBAC5BR,OAAA;IAAIiB,KAAK,EAAE8B,cAAe;IAAAvC,QAAA,EAAC;EAA0B;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAI,CAAC,eAC1DZ,OAAA,CAACuB,OAAO;IAAAd,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC,eACXZ,OAAA,CAACG,QAAQ;IAAAM,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAAA;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OACT,CACN;;AAED;AAAAoC,GAAA,GARMH,GAAG;AAST,MAAMC,iBAAiB,GAAG;EACxBG,SAAS,EAAE,QAAQ;EACnBC,UAAU,EAAE;AACd,CAAC;AAED,MAAMH,cAAc,GAAG;EACrBI,KAAK,EAAE;AACT,CAAC;AAED,MAAMlB,qBAAqB,GAAG;EAC5BmB,MAAM,EAAE;AACV,CAAC;AAED,MAAMb,iBAAiB,GAAG;EACxBc,OAAO,EAAE,KAAK;EACdC,WAAW,EAAE;AACf,CAAC;AAED,MAAMZ,kBAAkB,GAAG;EACzBW,OAAO,EAAE,KAAK;EACdE,eAAe,EAAE,SAAS;EAC1BJ,KAAK,EAAE,OAAO;EACdK,MAAM,EAAE,MAAM;EACdC,MAAM,EAAE;AACV,CAAC;AAED,MAAMvC,SAAS,GAAG;EAChBwC,OAAO,EAAE,MAAM;EACfC,cAAc,EAAE,eAAe;EAC/BC,UAAU,EAAE,QAAQ;EACpBP,OAAO,EAAE,KAAK;EACdQ,YAAY,EAAE;AAChB,CAAC;AAED,MAAMzC,kBAAkB,GAAG;EACzBmC,eAAe,EAAE,aAAa;EAC9BJ,KAAK,EAAE,SAAS;EAChBK,MAAM,EAAE,MAAM;EACdC,MAAM,EAAE;AACV,CAAC;AACD,eAAeZ,GAAG;AAAC,IAAAvB,EAAA,EAAAsB,GAAA,EAAAI,GAAA;AAAAc,YAAA,CAAAxC,EAAA;AAAAwC,YAAA,CAAAlB,GAAA;AAAAkB,YAAA,CAAAd,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
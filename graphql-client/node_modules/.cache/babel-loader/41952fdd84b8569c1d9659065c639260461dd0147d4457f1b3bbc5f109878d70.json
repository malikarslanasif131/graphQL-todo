{"ast":null,"code":"var _jsxFileName = \"D:\\\\New folder\\\\graphql-todos\\\\graphql-client\\\\src\\\\AddTodo.js\",\n  _s = $RefreshSig$();\n// AddTodo.js\nimport React from \"react\";\nimport { useMutation, gql } from \"@apollo/client\";\nimport { toast } from \"react-toastify\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ADD_TODO = gql`\n  mutation ($text: String!) {\n    addTodo(text: $text) {\n      id\n      text\n    }\n  }\n`;\nconst AddTodo = () => {\n  _s();\n  let input;\n  const handleAddSuccess = () => {\n    toast.success(\"Todo added successfully!\");\n  };\n  const handleAddError = () => {\n    toast.error(\"Failed to add todo. Please try again.\");\n  };\n  const [addTodo] = useMutation(ADD_TODO, {\n    update(cache, {\n      data: {\n        addTodo\n      }\n    }) {\n      const {\n        todos\n      } = cache.readQuery({\n        query: GET_TODOS\n      });\n      cache.writeQuery({\n        query: GET_TODOS,\n        data: {\n          todos: todos.concat([addTodo])\n        }\n      });\n      handleAddSuccess();\n    },\n    onError: handleAddError\n  });\n  const handleSubmit = e => {\n    e.preventDefault();\n    // Check if the input value is not empty before adding the todo\n    if (input.value.trim() !== \"\") {\n      addTodo({\n        variables: {\n          text: input.value\n        }\n      });\n      input.value = \"\";\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: addTodoContainerStyle,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        style: addTodoInputStyle,\n        ref: node => input = node\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: addTodoButtonStyle,\n        type: \"submit\",\n        children: \"Add Todo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n\n// Styles and other constants...\n_s(AddTodo, \"YkAyGXetDJOO19DxU8fZe8pVmwM=\", false, function () {\n  return [useMutation];\n});\n_c = AddTodo;\nexport default AddTodo;\nvar _c;\n$RefreshReg$(_c, \"AddTodo\");","map":{"version":3,"names":["React","useMutation","gql","toast","jsxDEV","_jsxDEV","ADD_TODO","AddTodo","_s","input","handleAddSuccess","success","handleAddError","error","addTodo","update","cache","data","todos","readQuery","query","GET_TODOS","writeQuery","concat","onError","handleSubmit","e","preventDefault","value","trim","variables","text","style","addTodoContainerStyle","children","onSubmit","addTodoInputStyle","ref","node","fileName","_jsxFileName","lineNumber","columnNumber","addTodoButtonStyle","type","_c","$RefreshReg$"],"sources":["D:/New folder/graphql-todos/graphql-client/src/AddTodo.js"],"sourcesContent":["// AddTodo.js\r\nimport React from \"react\";\r\nimport { useMutation, gql } from \"@apollo/client\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst ADD_TODO = gql`\r\n  mutation ($text: String!) {\r\n    addTodo(text: $text) {\r\n      id\r\n      text\r\n    }\r\n  }\r\n`;\r\n\r\nconst AddTodo = () => {\r\n  let input;\r\n\r\n  const handleAddSuccess = () => {\r\n    toast.success(\"Todo added successfully!\");\r\n  };\r\n\r\n  const handleAddError = () => {\r\n    toast.error(\"Failed to add todo. Please try again.\");\r\n  };\r\n\r\n  const [addTodo] = useMutation(ADD_TODO, {\r\n    update(cache, { data: { addTodo } }) {\r\n      const { todos } = cache.readQuery({ query: GET_TODOS });\r\n      cache.writeQuery({\r\n        query: GET_TODOS,\r\n        data: { todos: todos.concat([addTodo]) },\r\n      });\r\n      handleAddSuccess();\r\n    },\r\n    onError: handleAddError,\r\n  });\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    // Check if the input value is not empty before adding the todo\r\n    if (input.value.trim() !== \"\") {\r\n      addTodo({ variables: { text: input.value } });\r\n      input.value = \"\";\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={addTodoContainerStyle}>\r\n      <form onSubmit={handleSubmit}>\r\n        <input style={addTodoInputStyle} ref={(node) => (input = node)} />\r\n        <button style={addTodoButtonStyle} type=\"submit\">\r\n          Add Todo\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\n// Styles and other constants...\r\n\r\nexport default AddTodo;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,EAAEC,GAAG,QAAQ,gBAAgB;AACjD,SAASC,KAAK,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,QAAQ,GAAGJ,GAAI;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAED,MAAMK,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,IAAIC,KAAK;EAET,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;IAC7BP,KAAK,CAACQ,OAAO,CAAC,0BAA0B,CAAC;EAC3C,CAAC;EAED,MAAMC,cAAc,GAAGA,CAAA,KAAM;IAC3BT,KAAK,CAACU,KAAK,CAAC,uCAAuC,CAAC;EACtD,CAAC;EAED,MAAM,CAACC,OAAO,CAAC,GAAGb,WAAW,CAACK,QAAQ,EAAE;IACtCS,MAAMA,CAACC,KAAK,EAAE;MAAEC,IAAI,EAAE;QAAEH;MAAQ;IAAE,CAAC,EAAE;MACnC,MAAM;QAAEI;MAAM,CAAC,GAAGF,KAAK,CAACG,SAAS,CAAC;QAAEC,KAAK,EAAEC;MAAU,CAAC,CAAC;MACvDL,KAAK,CAACM,UAAU,CAAC;QACfF,KAAK,EAAEC,SAAS;QAChBJ,IAAI,EAAE;UAAEC,KAAK,EAAEA,KAAK,CAACK,MAAM,CAAC,CAACT,OAAO,CAAC;QAAE;MACzC,CAAC,CAAC;MACFJ,gBAAgB,CAAC,CAAC;IACpB,CAAC;IACDc,OAAO,EAAEZ;EACX,CAAC,CAAC;EAEF,MAAMa,YAAY,GAAIC,CAAC,IAAK;IAC1BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB;IACA,IAAIlB,KAAK,CAACmB,KAAK,CAACC,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;MAC7Bf,OAAO,CAAC;QAAEgB,SAAS,EAAE;UAAEC,IAAI,EAAEtB,KAAK,CAACmB;QAAM;MAAE,CAAC,CAAC;MAC7CnB,KAAK,CAACmB,KAAK,GAAG,EAAE;IAClB;EACF,CAAC;EAED,oBACEvB,OAAA;IAAK2B,KAAK,EAAEC,qBAAsB;IAAAC,QAAA,eAChC7B,OAAA;MAAM8B,QAAQ,EAAEV,YAAa;MAAAS,QAAA,gBAC3B7B,OAAA;QAAO2B,KAAK,EAAEI,iBAAkB;QAACC,GAAG,EAAGC,IAAI,IAAM7B,KAAK,GAAG6B;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAClErC,OAAA;QAAQ2B,KAAK,EAAEW,kBAAmB;QAACC,IAAI,EAAC,QAAQ;QAAAV,QAAA,EAAC;MAEjD;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;;AAED;AAAAlC,EAAA,CA5CMD,OAAO;EAAA,QAWON,WAAW;AAAA;AAAA4C,EAAA,GAXzBtC,OAAO;AA8Cb,eAAeA,OAAO;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}